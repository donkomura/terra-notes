steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"
- id: 'tf init'
  name: 'hashicorp/terraform:0.12.6'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "terraform" ]; then
        for dir in . $(find terraform -maxdepth 1 -type d -regex '^./[a-zA-Z].*' | cut -f 2 -d "/")
        do 
          cd terraform/${dir}
          echo ""
          echo "*************** TERRAFORM INIT ******************"
          echo "******* At directory: ${dir} ********"
          echo "*************************************************"
          terraform init || exit 1
          cd ../../
        done
      fi 

- id: 'tf fmt'
  name: 'hashicorp/terraform:0.12.6'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "terraform" ]; then
        for dir in . $(find terraform -maxdepth 1 -type d -regex '^./[a-zA-Z].*' | cut -f 2 -d "/")
        do 
          cd terraform/${dir}
          echo ""
          echo "*************** TERRAFORM FMT ******************"
          echo "******* At directory: ${dir} ********"
          echo "*************************************************"
          terraform fmt
          cd ../../
        done
      fi 

- id: 'tf validate'
  name: 'hashicorp/terraform:0.12.6'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "terraform" ]; then
        for dir in . $(find terraform -maxdepth 1 -type d -regex '^./[a-zA-Z].*' | cut -f 2 -d "/")
        do 
          cd terraform/${dir}
          echo ""
          echo "*************** TERRAFORM VALIDATE ******************"
          echo "******* At directory: ${dir} ********"
          echo "*************************************************"
          terraform validate 
          cd ../../
        done
      fi 
# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:0.12.6'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "terraform" ]; then
        cd terraform 
        terraform apply -auto-approve
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "Branch '$BRANCH_NAME' does not represent an oficial directory."
        echo "*******************************************************************************"
      fi
# [END tf-apply]      
